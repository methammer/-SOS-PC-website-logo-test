---
// src/components/ThemeSwitcher.astro
---
<button id="theme-toggle" aria-label="Changer de thème" title="Changer de thème">
  <svg class="sun-icon" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" width="24" height="24"><path d="M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zM12 9c1.65 0 3 1.35 3 3s-1.35 3-3 3-3-1.35-3-3 1.35-3 3-3zm0-7c.55 0 1 .45 1 1v2c0 .55-.45 1-1 1s-1-.45-1-1V3c0-.55.45-1 1-1zm0 18c.55 0 1 .45 1 1v2c0 .55-.45 1-1 1s-1-.45-1-1v-2c0-.55.45-1 1-1zm-8-9c.55 0 1 .45 1 1h2c0 .55-.45 1-1 1s-1-.45-1-1H3c0-.55.45-1 1-1zm14 0c.55 0 1 .45 1 1h2c0 .55-.45 1-1 1s-1-.45-1-1h-2c0-.55.45-1 1-1zm-9.71 7.29c.39.39 1.02.39 1.41 0l1.41-1.41c.39-.39.39-1.02 0-1.41a.9959.9959 0 00-1.41 0l-1.41 1.41c-.39.39-.39 1.02 0 1.41zm-4.24-4.24c.39.39 1.02.39 1.41 0l1.41-1.41c.39-.39.39-1.02 0-1.41a.9959.9959 0 00-1.41 0l-1.41 1.41c-.39.39-.39 1.02 0 1.41zM20 12c0 .55-.45 1-1 1h-2c-.55 0-1-.45-1-1s.45-1 1-1h2c.55 0 1 .45 1 1zM4 12c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1s.45-1 1-1h2c.55 0 1 .45 1 1zm13.31-5.29c.39-.39.39-1.02 0-1.41l-1.41-1.41a.9959.9959 0 00-1.41 0c-.39.39-.39 1.02 0 1.41l1.41 1.41c.39.39 1.02.39 1.41 0zm-10.6 0c.39-.39.39-1.02 0-1.41l-1.41-1.41a.9959.9959 0 00-1.41 0c-.39.39-.39 1.02 0 1.41l1.41 1.41c.39.39 1.02.39 1.41 0z"/></svg>
  <svg class="moon-icon" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" width="24" height="24" style="display:none;"><path d="M10 2c-1.82 0-3.53.5-5 1.35C7.99 5.08 10 8.3 10 12s-2.01 6.92-5 8.65C6.47 21.5 8.18 22 10 22c5.52 0 10-4.48 10-10S15.52 2 10 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/></svg>
</button>

<style>
  #theme-toggle {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem; /* Adjust padding as needed */
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--theme-icon-color);
    transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;
  }
  #theme-toggle:hover {
    background-color: rgba(128,128,128,0.1); /* Subtle hover effect */
  }
  .sun-icon, .moon-icon {
    width: 22px; /* Slightly smaller icon */
    height: 22px;
  }
  /* These CSS rules define the default visibility based on the .dark class on <html>.
     The JavaScript will override these with inline styles for active control. */
  html.dark #theme-toggle .sun-icon {
    display: none;
  }
  html.dark #theme-toggle .moon-icon {
    display: block;
  }
  html:not(.dark) #theme-toggle .sun-icon {
    display: block;
  }
  html:not(.dark) #theme-toggle .moon-icon {
    display: none;
  }
</style>

<script>
  // src/components/ThemeSwitcher.astro script
  console.log('[ThemeSwitcher] Script loaded.');

  function setupThemeToggle() {
    console.log('[ThemeSwitcher] setupThemeToggle CALLED.');
    const themeToggleButton = document.getElementById('theme-toggle');
    
    if (!themeToggleButton) {
      console.error('[ThemeSwitcher] CRITICAL: Theme toggle button (#theme-toggle) NOT FOUND in the DOM when setupThemeToggle was called.');
      return;
    }
    console.log('[ThemeSwitcher] Theme toggle button FOUND:', themeToggleButton);

    if (themeToggleButton.dataset.themeListenersAttached === 'true') {
      console.log('[ThemeSwitcher] Listeners already attached to this button instance. Re-validating icon state.');
      // Re-run icon update logic in case the theme changed by other means or for initial setup consistency
      const sunIconUpdate = themeToggleButton.querySelector('.sun-icon');
      const moonIconUpdate = themeToggleButton.querySelector('.moon-icon');
      const isDarkCurrent = document.documentElement.classList.contains('dark');
      if (sunIconUpdate && moonIconUpdate) {
        sunIconUpdate.style.display = isDarkCurrent ? 'none' : 'block';
        moonIconUpdate.style.display = isDarkCurrent ? 'block' : 'none';
        console.log(`[ThemeSwitcher] Icons re-validated. Sun: ${sunIconUpdate.style.display}, Moon: ${moonIconUpdate.style.display}`);
      }
      return; 
    }

    const sunIcon = themeToggleButton.querySelector('.sun-icon');
    const moonIcon = themeToggleButton.querySelector('.moon-icon');

    if (!sunIcon) console.error('[ThemeSwitcher] Sun icon (.sun-icon) NOT FOUND within the button.');
    if (!moonIcon) console.error('[ThemeSwitcher] Moon icon (.moon-icon) NOT FOUND within the button.');
    if (!sunIcon || !moonIcon) return;
    
    console.log('[ThemeSwitcher] Icons FOUND. Sun:', sunIcon, 'Moon:', moonIcon);

    function _updateIcons(isDark) {
      console.log(`[ThemeSwitcher] _updateIcons called. Target theme isDark: ${isDark}`);
      // Directly use the sunIcon and moonIcon variables captured in this closure
      sunIcon.style.display = isDark ? 'none' : 'block';
      moonIcon.style.display = isDark ? 'block' : 'none';
      console.log(`[ThemeSwitcher] Icons display set - Sun: ${sunIcon.style.display}, Moon: ${moonIcon.style.display}`);
    }

    const initialIsDark = document.documentElement.classList.contains('dark');
    console.log(`[ThemeSwitcher] Initial theme check from classList: document.documentElement isDark = ${initialIsDark}`);
    _updateIcons(initialIsDark);

    themeToggleButton.addEventListener('click', () => {
      console.log('[ThemeSwitcher] Button CLICKED.');
      const isDarkNow = document.documentElement.classList.toggle('dark');
      localStorage.setItem('theme', isDarkNow ? 'dark' : 'light');
      console.log(`[ThemeSwitcher] Theme toggled. New theme isDark: ${isDarkNow}. Stored in localStorage: ${localStorage.getItem('theme')}`);
      _updateIcons(isDarkNow);
    });
    
    themeToggleButton.dataset.themeListenersAttached = 'true';
    console.log('[ThemeSwitcher] Click listener ATTACHED and button marked (data-theme-listeners-attached="true").');
  }

  document.addEventListener('astro:page-load', () => {
    console.log('[ThemeSwitcher] astro:page-load event FIRED. Calling setupThemeToggle.');
    setupThemeToggle();
  });
  
  document.addEventListener('DOMContentLoaded', () => {
    console.log('[ThemeSwitcher] DOMContentLoaded event FIRED. Calling setupThemeToggle.');
    setupThemeToggle();
  });
  
  console.log('[ThemeSwitcher] Event listeners (astro:page-load, DOMContentLoaded) REGISTERED.');
</script>
