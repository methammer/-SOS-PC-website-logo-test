---
import Layout from '../layouts/Layout.astro';
// Import Swiper styles
import 'swiper/css';
import 'swiper/css/navigation';
import 'swiper/css/pagination';
import 'swiper/css/effect-coverflow';

// JS Imports moved to the client-side script below

const apiKey = import.meta.env.ABSTRACT_API_KEY;

const portfolioItemsConfig = [
  {
    id: "Artisan",
    name: "Site Vitrine pour Artisan",
    description: "Création d'un site web moderne et responsive pour un artisan local, mettant en valeur ses services et réalisations.",
    liveUrl: "https://boutique-artisan.netlify.app",
    placeholderImg: "https://via.placeholder.com/400x250.png?text=Site+Artisan",
    altText: "Aperçu Site Artisan",
    localFallbackImg: "/Portfolio preview/boutique-artisan.png" // Added local fallback
  },
  {
    id: "Restaurant",
    name: "Site Web pour Restaurant",
    description: "Développement d'un site avec menu en ligne, galerie photos et formulaire de réservation.",
    liveUrl: "#", // Update this URL to a real one to get a screenshot
    placeholderImg: "https://via.placeholder.com/400x250.png?text=Site+Restaurant",
    altText: "Aperçu Site Restaurant"
  },
  {
    id: "Photographe",
    name: "Portfolio en Ligne",
    description: "Mise en place d'un portfolio élégant pour un photographe, optimisé pour l'affichage d'images haute résolution.",
    liveUrl: "#", // Update this URL to a real one to get a screenshot
    placeholderImg: "https://via.placeholder.com/400x250.png?text=Portfolio+Photographe",
    altText: "Aperçu Portfolio Photographe"
  },
  {
    id: "BoltDIY2",
    name: "Projet Bolt DIY 2",
    description: "Un exemple de site web interactif créé avec Bolt.",
    liveUrl: "https://bolt-diy-2-1746478852874.netlify.app/",
    placeholderImg: "https://via.placeholder.com/400x250.png?text=Aperçu+Bolt+DIY+2",
    altText: "Aperçu Projet Bolt DIY 2"
  }
];

let portfolioPreviews = {};

if (apiKey) {
  console.log("AbstractAPI key found. Fetching screenshots...");
  const fetchPromises = portfolioItemsConfig.map(async (item) => {
    if (item.liveUrl && item.liveUrl !== "#" && !item.liveUrl.startsWith('https://via.placeholder.com')) {
      try {
        const apiUrl = `https://screenshot.abstractapi.com/v1/?api_key=${apiKey}&url=${encodeURIComponent(item.liveUrl)}&json=true&width=400&height=250&capture_full_page=false&delay=2`;
        const response = await fetch(apiUrl);
        if (!response.ok) {
          const errorBody = await response.text();
          console.error(`AbstractAPI error for ${item.liveUrl} [${response.status}]: ${errorBody.substring(0, 300)}`);
          return { id: item.id, url: item.localFallbackImg || item.placeholderImg }; // Use local fallback if API error
        }
        const data = await response.json();
        if (data.url) {
          console.log(`Screenshot fetched for ${item.liveUrl}: ${data.url}`);
          return { id: item.id, url: data.url };
        } else {
          console.warn(`AbstractAPI did not return a URL for ${item.liveUrl}. Response:`, JSON.stringify(data).substring(0, 300));
          return { id: item.id, url: item.localFallbackImg || item.placeholderImg }; // Use local fallback if no URL in response
        }
      } catch (error) {
        console.error(`Failed to fetch screenshot for ${item.liveUrl}:`, error);
        return { id: item.id, url: item.localFallbackImg || item.placeholderImg }; // Use local fallback on any other fetch error
      }
    }
    // For items not fetched via API (e.g., liveUrl is "#" or placeholder)
    return { id: item.id, url: item.localFallbackImg || item.placeholderImg };
  });

  const results = await Promise.all(fetchPromises);
  results.forEach(result => {
    portfolioPreviews[result.id] = result.url;
  });
} else {
  console.warn("ABSTRACT_API_KEY not found in .env. Using placeholder or local fallback images for portfolio.");
  portfolioItemsConfig.forEach(item => {
    portfolioPreviews[item.id] = item.localFallbackImg || item.placeholderImg;
  });
}
---

<Layout title="Accueil">
	<h1>SOS-PC</h1>
	<p class="tagline">Votre partenaire pour des solutions informatiques et web personnalisées.</p>

	<section id="about">
		<h2>À Propos de SOS-PC</h2>
		<p>
			SOS-PC, dirigé par un auto-entrepreneur passionné, propose une gamme complète de services pour répondre à vos besoins technologiques. Notre objectif est d'offrir des solutions fiables, performantes et adaptées, que ce soit pour les particuliers ou les professionnels.
		</p>
	</section>

	<section id="services" class="cta-section">
		<h2>Découvrez Nos Solutions</h2>
		<p class="services-intro">Que vous ayez besoin d'une réparation, d'un nouveau site web ou d'une solution d'hébergement spécifique, nous avons l'expertise qu'il vous faut.</p>

		<div class="service-cards">
			<article class="service-card">
				<div class="service-card-image-container service-card-image-container--with-gradient">
          <div id="lottie-pc-repair" class="service-card-lottie"></div>
				</div>
				<h3><i class="icon-repair"></i> Réparation Informatique</h3>
				<p>
					Dépannage, montage sur mesure, optimisation. Nous redonnons vie à votre matériel.
				</p>
				<ul>
					<li>Diagnostic et dépannage</li>
					<li>Remplacement de composants</li>
					<li>Montage PC personnalisé</li>
					<li>Optimisation & Récupération</li>
				</ul>
				<a href="#contact" class="cta-button">Demander un devis</a>
			</article>

			<article class="service-card">
				<div class="service-card-image-container service-card-image-container--with-gradient">
          <div id="lottie-web-design" class="service-card-lottie"></div>
				</div>
				<h3><i class="icon-web"></i> Création de Sites Web</h3>
				<p>
					Sites vitrines modernes, responsives et optimisés pour votre présence en ligne.
				</p>
				<ul>
					<li>Sites vitrines pro</li>
					<li>Design responsive</li>
					<li>SEO de base inclus</li>
					<li>Fonctionnalités sur mesure</li>
				</ul>
				<a href="#contact" class="cta-button">Discutons de votre projet</a>
			</article>

			<article class="service-card">
				<div class="service-card-image-container service-card-image-container--with-gradient">
					<div id="lottie-streaming" class="service-card-lottie"></div>
				</div>
				<h3><i class="icon-stream"></i> Hébergement Streaming</h3>
				<p>
					Votre propre plateforme média (Jellyfin, etc.) accessible partout, en toute sécurité.
				</p>
				<ul>
					<li>Installation Jellyfin/similaires</li>
					<li>Conseils matériel/serveur</li>
					<li>Accès sécurisé</li>
					<li>Maintenance de base</li>
				</ul>
				<a href="#contact" class="cta-button">En savoir plus</a>
			</article>

			<article class="service-card service-card--coming-soon">
				<div class="coming-soon-banner">Prochainement</div>
				<div class="service-card-image-container service-card-image-container--with-gradient">
					<img src="https://via.placeholder.com/300x150.png?text=Modèle+IA" alt="Hébergement Modèles IA" class="service-card-image">
				</div>
				<h3><i class="icon-ai"></i> Hébergement Modèles IA</h3>
				<p>
					Déployez et gérez vos modèles d'IA pour explorer leur potentiel. (Service en développement).
				</p>
				<ul>
					<li>Conseils hébergement</li>
					<li>Aide au déploiement</li>
					<li>Gestion infrastructure</li>
					<li>Contactez-nous pour discuter</li>
				</ul>
				<a href="#contact" class="cta-button">Contactez-nous</a>
			</article>
		</div>
	</section>

	<section id="location" class="map-section">
		<h2>Notre Zone d'Intervention Principale</h2>
		<p>Basé près de 04700 Le Castellet, nous intervenons dans les environs.</p>
		<div class="map-container">
			<iframe
				src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d22977.698102809892!2d5.758781840588819!3d43.85219171387919!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x12c913080a0d567b%3A0x40819a5fd970000!2s04700%20Le%20Castellet!5e0!3m2!1sen!2sfr!4v1716305000000!5m2!1sen!2sfr"
				width="100%"
				height="350"
				style="border:0; border-radius: 8px;"
				allowfullscreen=""
				loading="lazy"
				referrerpolicy="no-referrer-when-downgrade"
				title="Carte de localisation SOS-PC - Google Maps">
			</iframe>
			<br/>
			<small>
				<a href="https://maps.google.com/?q=04700+Le+Castellet" target="_blank">Voir sur Google Maps</a>
			</small>
		</div>
	</section>

	<section id="vitrine">
		<h2>Notre Vitrine Web</h2>
		<p class="vitrine-intro">Quelques exemples de sites web que nous avons réalisés.</p>

		<div class="swiper vitrine-swiper">
			<div class="swiper-wrapper">
        {portfolioItemsConfig.map(item => (
          <div class="swiper-slide">
            <article class="vitrine-item">
              <img 
                src={portfolioPreviews[item.id] || item.placeholderImg} 
                alt={item.altText} 
                class="vitrine-image"
                loading="lazy"
              />
              <div class="vitrine-content">
                <h3>{item.name}</h3>
                <p>{item.description}</p>
                <a 
                  href={item.liveUrl === "#" ? "#" : item.liveUrl} 
                  target={item.liveUrl === "#" ? "_self" : "_blank"} 
                  rel="noopener noreferrer" 
                  class:list={["vitrine-link", { "disabled-link": item.liveUrl === "#" }]}
                >
                  Voir le site
                </a>
              </div>
            </article>
          </div>
        ))}
			</div>
			<div class="swiper-pagination"></div>
			<div class="swiper-button-prev"></div>
			<div class="swiper-button-next"></div>
		</div>
	</section>

	<section id="contact">
		<h2>Contactez-nous</h2>
		<p>
			Pour toute demande d'information ou devis, n'hésitez pas à remplir le formulaire ci-dessous ou à nous contacter directement via les options ci-dessous. Nous serons ravis de discuter de votre projet.
		</p>

		<form class="contact-form" netlify>
			<div class="form-group">
				<label for="name">Nom :</label>
				<input type="text" id="name" name="name" required />
			</div>
			<div class="form-group">
				<label for="email">Email :</label>
				<input type="email" id="email" name="email" required />
			</div>
			<div class="form-group">
				<label for="subject">Sujet :</label>
				<input type="text" id="subject" name="subject" required />
			</div>
			<div class="form-group">
				<label for="message">Message :</label>
				<textarea id="message" name="message" rows="5" required></textarea>
			</div>
			<button type="submit" class="submit-button">Envoyer le Message</button>
		</form>

		<div class="contact-buttons">
			<p>Ou contactez-nous directement :</p>
			<a href="tel:+33XXXXXXXXX" class="contact-button phone">
				<span class="icon">📞</span> Téléphone
			</a>
			<a href="https://discord.gg/YOUR_INVITE_CODE" target="_blank" rel="noopener noreferrer" class="contact-button discord">
				<span class="icon">💬</span> Discord
			</a>
			<a href="https://t.me/YOUR_USERNAME" target="_blank" rel="noopener noreferrer" class="contact-button telegram">
				<span class="icon">✈️</span> Telegram
			</a>
		</div>
	</section>

</Layout>

<script>
  import Swiper from 'swiper';
  import { Navigation, Pagination, EffectCoverflow } from 'swiper/modules';
  import lottie from 'lottie-web';

  document.addEventListener('DOMContentLoaded', () => {
    // Swiper initialization
    const swiper = new Swiper('.vitrine-swiper', {
      modules: [Navigation, Pagination, EffectCoverflow],
      effect: 'coverflow',
      grabCursor: true,
      centeredSlides: true,
      loop: true,
      slidesPerView: 'auto',
      coverflowEffect: {
        rotate: 50,
        stretch: 0,
        depth: 100,
        modifier: 1,
        slideShadows: true,
      },
      pagination: {
        el: '.swiper-pagination',
        clickable: true,
      },
      navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev',
      },
    });

    // Lottie animation for Web Design card
    const lottieWebDesignContainer = document.getElementById('lottie-web-design');
    if (lottieWebDesignContainer) {
      lottie.loadAnimation({
        container: lottieWebDesignContainer,
        renderer: 'svg',
        loop: true,
        autoplay: true,
        path: '/web-design/animations/43f834cb-31ab-428c-acf2-2674d3b07d94.json'
      });
    }

    // Lottie animation for PC Repair card
    const lottiePcRepairContainer = document.getElementById('lottie-pc-repair');
    if (lottiePcRepairContainer) {
      lottie.loadAnimation({
        container: lottiePcRepairContainer,
        renderer: 'svg',
        loop: true,
        autoplay: true,
        path: '/PC-repair/animations/8acfa0f0-493f-445c-a1a3-ae798829ce77.json'
      });
    }

    // Lottie animation for Streaming card
    const lottieStreamingContainer = document.getElementById('lottie-streaming');
    if (lottieStreamingContainer) {
      lottie.loadAnimation({
        container: lottieStreamingContainer,
        renderer: 'svg',
        loop: true,
        autoplay: true,
        path: '/Streaming/animations/3add7b2a-2592-4274-a7f6-614fcd7bfe31.json'
      });
    }
  });
</script>


<style>
	.tagline {
		text-align: center;
		font-style: italic;
		color: var(--text-color); /* Use CSS variable */
		opacity: 0.8;
		margin-bottom: 3rem;
		transition: color 0.3s ease;
	}

	section {
		margin-bottom: 3rem;
		padding: 2rem;
		border-bottom: none;
		position: relative;
		/* background-color: transparent; Removed, main has bg now */
		border-radius: 8px;
		/* Removed transition for hover effects */
		/* transition: background-color 0.3s ease, transform 0.3s ease, box-shadow 0.3s ease; */
	}

	section:not(:last-of-type)::after {
		content: '';
		position: absolute;
		bottom: -1.5rem;
		left: 50%;
		transform: translateX(-50%);
		width: 80%;
		max-width: 500px;
		height: 2px;
		background: linear-gradient(to right, transparent, var(--section-separator-color), transparent); /* Use CSS variable */
		opacity: 0.5;
		transition: opacity 0.3s ease, background 0.3s ease;
	}

	.section-image {
		display: block;
		max-width: 100%;
		height: auto;
		margin: 1.5rem auto;
		border-radius: 8px;
		opacity: 0.9;
	}

	.cta-section h2 {
		text-align: center;
		margin-bottom: 1rem;
	}
	.services-intro {
		text-align: center;
		color: var(--text-color); /* Use CSS variable */
		opacity: 0.9;
		margin-bottom: 2.5rem;
		max-width: 60ch;
		margin-left: auto;
		margin-right: auto;
		transition: color 0.3s ease;
	}
	.service-cards {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
		gap: 1.5rem;
	}
	.service-card {
		background-color: var(--card-bg-color); /* Use CSS variable */
		padding: 0;
		border-radius: 8px;
		display: flex;
		flex-direction: column;
		transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out, background-color 0.3s ease;
		overflow: hidden;
		border: 1px solid var(--border-color); /* Add subtle border */
		position: relative; /* Needed for the banner positioning */
	}

	.service-card:hover {
		transform: translateY(-5px);
		box-shadow: 0 8px 15px rgba(0, 0, 0, 0.3);
	}

	.service-card--coming-soon .service-card-image-container,
	.service-card--coming-soon h3,
	.service-card--coming-soon p,
	.service-card--coming-soon ul,
	.service-card--coming-soon .cta-button {
		opacity: 0.5; /* Dim the content of the coming soon card */
		pointer-events: none; /* Disable interactions with dimmed content */
	}

	.service-card--coming-soon .cta-button {
		background-color: var(--disabled-button-bg-color, #6c757d); /* Greyed out button */
		cursor: not-allowed;
	}


	.coming-soon-banner {
		position: absolute;
		top: 500px !important;   /* User-set value, maintained */
		left: -100px !important;  /* Adjusted for new length */
		background-color: rgb(var(--accent)); /* Purple theme */
		color: white;
		padding: 10px 250px;     /* Increased padding for length */
		font-size: 0.9rem;
		font-weight: bold;
		text-align: center;
		transform: rotate(-45deg);
		transform-origin: top left;
		box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
		z-index: 10;
		white-space: nowrap;
		letter-spacing: 0.5px;
	}


	.service-card-image-container {
		position: relative;
	}

	.service-card-image {
		width: 100%;
		height: 150px; /* Default height for card images */
		object-fit: cover;
		display: block;
	}

  .service-card-lottie {
    width: 100%;
    height: 180px; /* Match the GIF card image height or adjust as needed */
    display: block;
  }

	/* Specific styles for the GIF card image to make it taller */
	.service-card-image-container--with-gradient .service-card-image,
  .service-card-image-container--with-gradient .service-card-lottie {
		height: 180px; /* Increased height for the GIF/Lottie */
	}

	/* Gradient overlay for the GIF card image */
	.service-card-image-container--with-gradient::after {
		content: '';
		position: absolute;
		bottom: 0;
		left: 0;
		width: 100%;
		height: 70%; /* Gradient covers the bottom 70% of the image height */
		background: linear-gradient(
			to bottom,
			transparent 0%, /* Starts transparent at the top of this pseudo-element */
			var(--card-bg-color) 100% /* Fades to card background color at the bottom */
		);
		pointer-events: none; /* Allows clicks to pass through if needed */
	}

	.service-card h3 {
		display: flex;
		align-items: center;
		gap: 0.7rem;
		margin-top: 0; /* Reset margin if image container is used */
		color: var(--heading-color); /* Use CSS variable */
		padding: 1rem 1.5rem 0 1.5rem;
		z-index: 1; /* Ensure text is above gradient if it overlaps slightly */
    position: relative; /* For z-index to work */
	}
	.service-card p {
		flex-grow: 1;
		margin-bottom: 1rem;
		color: var(--card-text-color); /* Use CSS variable */
		padding: 0 1.5rem;
		transition: color 0.3s ease;
		z-index: 1;
    position: relative;
	}
	.service-card ul {
		font-size: 0.9em;
		margin-bottom: 1.5rem;
		padding: 0 1.5rem 0 2.7rem;
		flex-grow: 1;
		color: var(--card-text-color); /* Use CSS variable */
		transition: color 0.3s ease;
		z-index: 1;
    position: relative;
	}
	.service-card li {
		margin-bottom: 0.4rem;
	}
	.cta-button {
		display: block;
		background-color: var(--button-bg-color); /* Use CSS variable */
		color: var(--button-text-color); /* Use CSS variable */
		padding: 0.7rem 1.2rem;
		border-radius: 5px;
		text-decoration: none;
		text-align: center;
		font-weight: bold;
		transition: background-color 0.2s ease, color 0.3s ease;
		margin: 1.5rem; /* Keep margin consistent */
		z-index: 1;
    position: relative;
	}
	.cta-button:hover {
		background-color: var(--button-hover-bg-color); /* Use CSS variable */
	}

	.icon-repair::before,
	.icon-web::before,
	.icon-stream::before,
	.icon-ai::before {
		content: '⚙️';
		display: inline-block;
		font-size: 1.5em;
		color: var(--link-color); /* Use link color for icons, or a specific icon color variable */
		transition: color 0.3s ease;
	}
	.icon-web::before { content: '🌐'; }
	.icon-stream::before { content: '🎬'; }
	.icon-ai::before { content: '🧠'; }

	.map-section h2,
	.map-section p:first-of-type {
		text-align: center;
	}
	.map-container {
		margin-top: 1.5rem;
		text-align: center;
	}
	.map-container iframe {
		max-width: 100%;
		opacity: 0.95; 
		border-radius: 8px;
		border: 1px solid var(--border-color);
		transition: opacity 0.3s ease, border-color 0.3s ease; 
	}

	.map-container small {
		display: block;
		margin-top: 0.5rem;
		font-size: 0.85em;
		color: var(--text-color);
		opacity: 0.7;
		transition: color 0.3s ease;
	}
	.map-container small a {
		color: var(--link-color);
		text-decoration: underline;
	}
	.map-container small a:hover {
		color: var(--accent-dark);
	}
	html.dark .map-container small a:hover {
		color: white;
	}


	#vitrine h2 {
		text-align: center;
		margin-bottom: 1rem;
	}
	.vitrine-intro {
		text-align: center;
		color: var(--text-color);
		opacity: 0.9;
		margin-bottom: 2.5rem;
		max-width: 60ch;
		margin-left: auto;
		margin-right: auto;
		transition: color 0.3s ease;
	}
	.vitrine-swiper {
		width: 100%;
		padding-top: 20px;
		padding-bottom: 50px;
		position: relative;
	}
	.swiper-slide {
		background-position: center;
		background-size: cover;
		width: 60%;
		max-width: 400px;
		overflow: hidden;
		border-radius: 8px;
	}
	.swiper-slide:not(.swiper-slide-active) {
		opacity: 0.7;
	}
	.swiper-slide .vitrine-item {
		background-color: var(--card-bg-color); 
		border-radius: 8px;
		overflow: hidden;
		display: flex;
		flex-direction: column;
		width: 100%;
		margin: 0 auto;
		box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
		transition: background-color 0.3s ease; 
		height: 100%;
		border: 1px solid var(--border-color); 
	}

	.vitrine-image {
		width: 100%;
		height: 200px;
		object-fit: cover;
		object-position: top; /* This will prioritize the top of the image */
		display: block;
		border-bottom: 3px solid var(--link-color); 
		transition: border-color 0.3s ease;
    background-color: var(--card-bg-color); /* Add a background for images that might be transparent or slow loading */
	}
	.vitrine-content {
		padding: 1.5rem;
		flex-grow: 1;
		display: flex;
		flex-direction: column;
		min-height: 150px;
	}
	.vitrine-content h3 {
		margin-top: 0;
		color: var(--heading-color); 
		margin-bottom: 0.75rem;
	}
	.vitrine-content p {
		color: var(--card-text-color); 
		flex-grow: 1;
		margin-bottom: 1rem;
		transition: color 0.3s ease;
	}
	.vitrine-link {
		display: inline-block;
		background-color: transparent;
		color: var(--link-color); 
		padding: 0.5rem 0;
		border-radius: 4px;
		text-decoration: none;
		font-weight: bold;
		transition: color 0.2s ease, background-color 0.2s ease, border-color 0.3s ease;
		margin-top: auto;
		border: 1px solid var(--link-color); 
		text-align: center;
		max-width: 150px;
	}
	.vitrine-link:hover {
		background-color: rgba(var(--accent), 0.2); 
		color: var(--accent-dark);
	}
  .vitrine-link.disabled-link {
    opacity: 0.5;
    pointer-events: none;
    background-color: var(--disabled-button-bg-color, #6c757d);
    border-color: var(--disabled-button-bg-color, #6c757d);
    color: var(--button-text-color);
  }
	html.dark .vitrine-link:hover {
		background-color: rgba(var(--accent-light), 0.2);
		color: white;
	}
  html.dark .vitrine-link.disabled-link {
    background-color: var(--disabled-button-bg-color, #5a6268);
    border-color: var(--disabled-button-bg-color, #5a6268);
  }


	.swiper-pagination-bullet {
		background-color: var(--text-color); 
		opacity: 0.5;
		transition: background-color 0.3s ease;
	}
	.swiper-pagination-bullet-active {
		background-color: var(--link-color); 
		opacity: 1;
	}
	.swiper-button-prev,
	.swiper-button-next {
		color: var(--link-color); 
		background-color: rgba(var(--card-bg-color-rgb, 35, 38, 45), 0.5); 
		border-radius: 50%;
		width: 40px;
		height: 40px;
		transition: background-color 0.2s ease, color 0.3s ease;
		top: 50%;
		transform: translateY(-50%);
	}
	html.light .swiper-button-prev,
	html.light .swiper-button-next {
		background-color: rgba(255, 255, 255, 0.5); 
	}
	.swiper-button-prev:hover,
	.swiper-button-next:hover {
		background-color: rgba(var(--card-bg-color-rgb, 35, 38, 45), 0.8);
	}
	html.light .swiper-button-prev:hover,
	html.light .swiper-button-next:hover {
		background-color: rgba(255, 255, 255, 0.8); 
	}
	.swiper-button-prev::after,
	.swiper-button-next::after {
		font-size: 1.2rem;
		font-weight: bold;
	}
	.swiper-button-prev { left: 10px; }
	.swiper-button-next { right: 10px; }


	#contact h2 {
		text-align: center;
	}
	#contact > p:first-of-type {
		text-align: center;
		margin-bottom: 2rem;
	}
	.contact-form {
		background-color: var(--card-bg-color); 
		padding: 2rem;
		border-radius: 8px;
		max-width: 600px;
		margin: 0 auto 2rem auto;
		box-sizing: border-box;
		transition: background-color 0.3s ease; 
		border: 1px solid var(--border-color); 
	}

	.form-group {
		margin-bottom: 1.5rem;
	}
	.form-group label {
		display: block;
		margin-bottom: 0.5rem;
		color: var(--text-color); 
		font-weight: bold;
		transition: color 0.3s ease;
	}
	.form-group input,
	.form-group textarea {
		width: 100%;
		padding: 0.8rem;
		border: 1px solid var(--input-border-color); 
		background-color: var(--input-bg-color); 
		color: var(--input-text-color); 
		border-radius: 4px;
		font-size: 1rem;
		box-sizing: border-box;
		transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
	}
	.form-group input:focus,
	.form-group textarea:focus {
		outline: none;
		border-color: var(--input-focus-border-color); 
		box-shadow: 0 0 0 2px var(--input-focus-shadow-color); 
	}
	.submit-button {
		display: block;
		width: 100%;
		padding: 0.9rem 1.5rem;
		background-color: var(--button-bg-color); 
		color: var(--button-text-color); 
		border: none;
		border-radius: 5px;
		font-size: 1.1rem;
		font-weight: bold;
		cursor: pointer;
		transition: background-color 0.2s ease, color 0.3s ease;
	}
	.submit-button:hover {
		background-color: var(--button-hover-bg-color); 
	}

	.contact-buttons {
		text-align: center;
		margin-top: 2.5rem;
	}
	.contact-buttons p {
		margin-bottom: 1rem;
		color: var(--text-color);
		opacity: 0.8;
		transition: color 0.3s ease;
	}
	.contact-button {
		display: inline-flex;
		align-items: center;
		justify-content: center;
		gap: 0.6rem;
		background-color: var(--contact-button-bg); 
		color: var(--contact-button-text); 
		padding: 0.8rem 1.5rem;
		border-radius: 5px;
		text-decoration: none;
		font-weight: bold;
		margin: 0.5rem;
		transition: background-color 0.2s ease, transform 0.1s ease, color 0.3s ease, border-color 0.3s ease;
		border: 1px solid var(--contact-button-border); 
		min-width: 150px;
	}
	.contact-button:hover {
		background-color: var(--contact-button-hover-bg); 
		transform: translateY(-2px);
	}
	.contact-button .icon {
		font-size: 1.2em;
		display: inline-block;
	}
	.contact-button.phone { background-color: #4CAF50; border-color: #388E3C; color: white; }
	.contact-button.phone:hover { background-color: #66BB6A; }
	.contact-button.discord { background-color: #5865F2; border-color: #4650c1; color: white; }
	.contact-button.discord:hover { background-color: #707bf3; }
	.contact-button.telegram { background-color: #0088cc; border-color: #006da3; color: white; }
	.contact-button.telegram:hover { background-color: #33aadd; }

	html.light .contact-button.phone {}
	html.light .contact-button.discord {}
	html.light .contact-button.telegram {}


	@media (max-width: 768px) {
		.swiper-slide { width: 70%; }
	}

	@media (max-width: 640px) {
		section { padding: 1.5rem; }
		.swiper-slide { width: 80%; }
		.vitrine-image { height: 180px; }
		.vitrine-content { padding: 1rem; min-height: 120px; }
		.vitrine-link { max-width: none; width: 100%; padding: 0.7rem 1rem; }
		.swiper-button-prev, .swiper-button-next { width: 35px; height: 35px; }
		.swiper-button-prev::after, .swiper-button-next::after { font-size: 1rem; }
		.swiper-button-prev { left: 5px; }
		.swiper-button-next { right: 5px; }
		.contact-form { padding: 1.5rem; }
		.contact-buttons { display: flex; flex-direction: column; align-items: center; gap: 1rem; }
		.contact-button { width: 80%; max-width: 300px; margin: 0; padding: 0.9rem 1rem; }
		.map-container iframe { height: 250px; }
	}
</style>
